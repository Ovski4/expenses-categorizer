{% extends 'base.html.twig' %}

{% block title %}{% trans %}Categorize transactions{% endtrans %}{% endblock %}

{% block navbar %}
    {% include 'navbar.html.twig' with {'current': 'categorize_transaction'} %}
{% endblock %}

{% block body %}
    <h1>{% trans %}Categorize transactions{% endtrans %}</h1>

    <form method="post" action="{{ path('transaction_categorize') }}">
        <input type="hidden" name="_method" value="PATCH">
        <button class="btn btn-primary">{% trans %}Categorize transactions from rules{% endtrans %}</button>
    </form>

    <table class="table" {{ transactions is defined ? 'table' : 'style="display: none"' }}>
        <thead class="thead-dark">
            <tr>
                <th>{% trans %}Label{% endtrans %}</th>
                <th>{% trans %}Date{% endtrans %}</th>
                <th>{% trans %}Amount{% endtrans %}</th>
                <th>{% trans %}Type{% endtrans %}</th>
                <th class="bg-info">{% trans %}Sub category{% endtrans %}</th>
            </tr>
        </thead>
        <tbody>
        {% if transactions is defined %}
            {% for transaction in transactions %}
                <tr>
                    <td>{{ transaction.label | capitalize }}</td>
                    <td>{{ transaction.createdAt|date('Y-m-d') }}</td>
                    <td>{{ transaction.amount }}</td>
                    <td>{{ transaction.type }}</td>
                    <td class="table-info">{{ transaction.subCategory }}</td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="6">{% trans %}No transaction categorized{% endtrans %}</td>
                </tr>
            {% endfor %}
        {% endif %}
        </tbody>
    </table>

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script type="text/javascript">

        const fadeIn = (el, time) => {
            el.style.opacity = 0;
            let last = +new Date();
            const tick = () => {
                el.style.opacity = +el.style.opacity + (new Date() - last) / time;
                last = +new Date();

                if (+el.style.opacity < 1) {
                    (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);
                }
            };

            tick();
        }

        const createLastTableRow = (message) => {
            const tr = document.createElement('tr');
            tr.style.opacity = 0;
            tr.innerHTML = `<tr><td colspan="6">{% trans %}No more transactions to categorize{% endtrans %}</td></tr>`;
            document.querySelector('table tbody').appendChild(tr);

            return tr;
        }

        const createTableRow = (message) => {
            const tr = document.createElement('tr');
            tr.style.opacity = 0;
            tr.innerHTML = `
                <td>${message.data.label}</td>
                <td>${message.data.created_at.substring(0, 10)}</td>
                <td>${message.data.amount}</td>
                <td>${message.data.type}</td>
                <td class="table-info">${message.data.sub_category}</td>`
            ;
            document.querySelector('table tbody').appendChild(tr);

            return tr;
        }

        const form = document.querySelector('form[action="/transaction/categorize"]');

        window.addEventListener('load', () => {
            form.querySelector('button').addEventListener('click', (event) => {
                event.preventDefault();
                const button = event.target;
                button.disabled = true;

                const hiddenTable = document.querySelector('table[style="display: none"]');
                if (hiddenTable) {
                    hiddenTable.style.display = 'table';
                }

                document.querySelector('table tbody').innerHTML = '<tr><td colspan="6">{% trans %}Categorizing{% endtrans %}...</td></tr>';

                var ws = new WebSocket('ws://{{ app_domain }}/web-socket/');

                ws.onopen = () => {
                    ws.send('categorize_transactions');
                };

                ws.onmessage = (event) => {
                    try {
                        const message = JSON.parse(event.data);
                        if (message.topic === 'single_transaction.categorized') {
                            const tr = createTableRow(message);
                            fadeIn(tr, 1000);
                        } else if (message.topic === 'transactions.categorized') {
                            const tr = createLastTableRow(message);
                            fadeIn(tr, 1000);
                            button.disabled = false;
                            ws.close();
                        }
                    } catch (e) {
                        console.log(event.data);
                    }
                };

                ws.onerror = () => {
                    form.submit();
                };
            });
        });
    </script>

{% endblock %}
