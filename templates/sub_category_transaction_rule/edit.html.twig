{% extends 'base.html.twig' %}

{% block title %}{% trans %}Edit this sub category transaction rule{% endtrans %}{% endblock %}

{% block navbar %}
    {% include 'navbar.html.twig' with {'current': 'sub_category_transaction_rule'} %}
{% endblock %}

{% block body %}
    <h1>{% trans %}Edit this sub category transaction rule{% endtrans %}</h1>

    <div id="rule-description" class="alert alert-info" style="display: none" role="alert"></div>

    {{ include('sub_category_transaction_rule/_form.html.twig') }}

    <a class="btn btn-outline-primary" href="{{ path('sub_category_transaction_rule_index') }}">
        {% trans %}Go back to the rule list{% endtrans %}
    </a>

    {{ include('sub_category_transaction_rule/_delete_form.html.twig') }}
{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script type="text/javascript">
        const formElements = document.querySelectorAll(
            'form .form-group select,' +
            'form .form-group input'
        );

        const renderFormObject = () => {
            const subCategoryElement = document.getElementById('sub_category_transaction_rule_subCategory');
            const subCategoryText = subCategoryElement.options[subCategoryElement.selectedIndex].text;

            const operatorElement = document.getElementById('sub_category_transaction_rule_operator');
            const operatorText = operatorElement.options[operatorElement.selectedIndex].text;

            return {
                'contains': document.getElementById('sub_category_transaction_rule_contains').value,
                'subCategory': subCategoryText,
                'amount': document.getElementById('sub_category_transaction_rule_amount').value,
                'operator': operatorText
            }
        };

        const renderInfoDiv = () => {
            const formObject = renderFormObject();
            const descriptionDiv = document.getElementById('rule-description');

            descriptionDiv.style.display = 'block';
            descriptionDiv.innerText = buildDescription(formObject);
        };

        const buildDescription = (formObject) => {
            if (formObject['contains'] == '' || formObject['subCategory'] == '') {
                return '{% trans %}Incomplete rule{% endtrans %}';
            }

            let text = `{% trans %}Transactions containing text{% endtrans %} "${formObject['contains']}"`;

            if (formObject['amount'] != '' && formObject['operator'] != '') {
                text += ` {% trans %}and whose amount is{% endtrans %} ${formObject['operator']} {% trans %}to{% endtrans %} ${formObject['amount']}`;
            }

            text += ` {% trans %}will be categorized in{% endtrans %} "${formObject['subCategory']}"`;

            return text;
        };

        renderInfoDiv();

        formElements.forEach(element => {
            element.addEventListener('change', (event) => {
                renderInfoDiv();
            });
        });

    </script>

{% endblock %}
