parameters:
    app.statements_dir: '/var/statements/'
    app.domain: '%env(resolve:APP_DOMAIN)%'
    app.account_statement_parser_api_url: account_statement_parser
    app.locale: '%env(resolve:LOCALE)%'
    app.elasticsearch_host: elasticsearch:9200

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    PagerFantaTranslated:
        class: Pagerfanta\View\OptionableView
        arguments:
            - '@pagerfanta.view.twitter_bootstrap4'
            - { proximity: 2, prev_message: ←, next_message: → }
        public: false
        tags: [{ name: pagerfanta.view, alias: custom_view }]

    CategorizeTransactionsHandler:
        class: App\Services\WebSocketMessageHandler\CategorizeTransactionsHandler
        tags:
            - { name: 'app.message_handler', trigger: 'categorize_transactions' }

    ExportTransactionsHandler:
        class: App\Services\WebSocketMessageHandler\ExportTransactionsHandler
        tags:
            - { name: 'app.message_handler', trigger: 'export_transactions' }

    ElasticsearchSyncStatusUpdater:
        class: App\Services\DoctrineListeners\ElasticsearchSyncStatusUpdater
        tags:
            - { name: 'doctrine.event_subscriber' }

    ElasticsearchTransactionRemover:
        class: App\Services\DoctrineListeners\ElasticsearchTransactionRemover
        tags:
            -
                name: 'doctrine.orm.entity_listener'
                event: 'preRemove'
                entity: 'App\Entity\Transaction'
                lazy: true
                method: 'remove'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
